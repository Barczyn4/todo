{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/resources/index.js","src/modules/home.js","src/modules/list.js","src/resources/data/data-services.js","src/resources/data/todos.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/completed.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","globalResources","Home","users","message","showLogin","loginError","login","email","password","sessionStorage","setItem","JSON","stringify","response","user","navigate","catch","console","log","error","showRegister","firstName","lastName","registerError","save","serverResponse","List","todos","parse","getItem","showList","priorities","showCompleted","editTodo","todo","todoObj","saveTodo","alert","todoId","_id","filesToUpload","length","uploadFile","activate","getUserTodo","createTodo","description","dateDue","Date","priority","toggleShowCompleted","files","userId","formData","FormData","forEach","item","index","append","data","uploadFiles","TODO_SERVICE","deleteTodo","completeTodo","completed","changeFiles","Array","push","removeFile","splice","logout","removeItem","back","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","autHeader","get","url","fetch","json","post","content","method","body","object","put","delete","ToDos","todosArray","id","i","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","CompletedValueConverter","toView","array","filter","DateFormatValueConverter","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { AuthorizeStep } from 'aurelia-auth';\nexport class App {\n\tconfigureRouter(config, router) {\n\t\tthis.router = router;\n\t\tconfig.addPipelineStep('authorize', AuthorizeStep);\n\t\tconfig.map([\n\t\t\t{\n\t\t\t\troute: ['', 'home'],\n\t\t\t\tmoduleId: './modules/home',\n\t\t\t\tname: 'Home'\n\t\t\t},\n\t\t\t{\n\t\t\t\troute: 'list',\n\t\t\t\tmoduleId: './modules/list',\n\t\t\t\tname: 'List',\n\t\t\t\tauth: true\n\t\t\t}\n\t\t]);\n\t}\n}\n","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport config from './auth-config';\n\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig) => {\n      baseConfig.configure(config);\n    })\n\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  config.globalResources([\n    './value-converters/date-format','./value-converters/completed',\n    './elements/flatpickr'\n  ]);\n}\n","import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\nimport { Users } from '../resources/data/users';\r\nimport {AuthService} from 'aurelia-auth';\r\n\r\n\r\n@inject(Router,Users, AuthService)\r\nexport class Home {\r\n  constructor(router, users, auth) {\r\n  this.router = router,users;\r\n  this.users = users;\r\n  this.message = 'Home';\r\n  this.showLogin = true;\r\n  this.auth = auth;\r\n  this.loginError = '';\r\n\r\n\r\n  }\r\n\r\n  login() {\r\n    return this.auth.login(this.email, this.password)\r\n      .then(response => {\r\n\tsessionStorage.setItem(\"user\", JSON.stringify(response.user));\r\n\tthis.loginError = \"\";\r\n    this.router.navigate('list');\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n    this.loginError = \"Invalid credentials.\";\r\n  });\r\n};\r\n\r\n  showRegister(){\r\n    this.user = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\"\r\n      }\r\n      this.registerError = \"\";\r\n      this.showLogin = false;\r\n  }\r\n   async save() {\r\n          let serverResponse = await this.users.save(this.user);\r\n          if (!serverResponse.error) {\r\n            this.showLogin = true;\r\n          } else {\r\n            this.registerError = \"There was a problem registering the user.\"\r\n          }\r\n    }\r\n  }    \r\n\r\n","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { AuthService } from 'aurelia-auth';\r\nimport { ToDos } from '../resources/data/todos';\r\n\r\n\r\n@inject(Router, AuthService, ToDos)\r\nexport class List {\r\n  constructor(router, auth, todos) {\r\n    this.router = router;\r\n    this.auth = auth;\r\n    this.todos = todos;\r\n\r\n    this.message = 'List';\r\n    this.user = JSON.parse(sessionStorage.getItem('user'));\r\n    this.showList = true;\r\n    this.priorities = ['Low', 'Medium', 'High', 'Critical']\r\n    this.showCompleted = false;\r\n  }\r\n\r\n  editTodo(todo) {\r\n    this.todoObj = todo;\r\n    this.showList = false;\r\n  }\r\n\r\n  async saveTodo() {\r\n    if (this.todoObj) {\r\n      let response = await this.todos.save(this.todoObj);\r\n      if (response.error) {\r\n        alert(\"There was an error creating the ToDo\");\r\n      } else {\r\n        var todoId = response._id;\r\n        if (this.filesToUpload && this.filesToUpload.length) {\r\n          await this.todos.uploadFile(this.filesToUpload, this.user._id, todoId);\r\n          this.filesToUpload = [];\r\n        }\r\n      }\r\n      this.showList = true;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  async activate() {\r\n    console.log(this.todos) \r\n    await this.todos.getUserTodo(this.user._id);\r\n  }\r\n\r\n\r\n  createTodo() {\r\n    this.todoObj = {\r\n      todo: \"\",\r\n      description: \"\",\r\n      dateDue: new Date(),\r\n      user: this.user._id,\r\n      priority: this.priorities[0]\r\n    }\r\n    this.showList = false;\r\n  }\r\n\r\n  toggleShowCompleted() {\r\n    this.showCompleted = !this.showCompleted;\r\n  }\r\n\r\n  uploadFile(files, userId, todoId) {\r\n    let formData = new FormData();\r\n    files.forEach((item, index) => {\r\n      formData.append(\"file\" + index, item);\r\n    });\r\n\r\n    let response = this.data.uploadFiles(formData, this.TODO_SERVICE + \"/upload/\" + userId + \"/\" + todoId);\r\n    return response;\r\n  }\r\n\r\n  deleteTodo(todo) {\r\n    this.todos.deleteTodo(todo._id);\r\n  }\r\n\r\n  completeTodo(todo) {\r\n    todo.completed = !todo.completed;\r\n    this.todoObj = todo;\r\n    this.saveTodo();\r\n  }\r\n\r\n\r\n  changeFiles() {\r\n    this.filesToUpload = new Array();\r\n    this.filesToUpload.push(this.files[0]);\r\n  }\r\n\r\n  removeFile(index) {\r\n    this.filesToUpload.splice(index, 1);\r\n  }\r\n\r\n\r\n  logout() {\r\n    sessionStorage.removeItem('user');\r\n    this.auth.logout();\r\n\r\n\r\n  }\r\n  \r\n  back(){\r\n    this.showList = true;\r\n  }\r\n\r\n}","import { inject } from 'aurelia-framework';\r\nimport {HttpClient, json} from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n\tconstructor(http) {\r\n\t\tthis.httpClient = http;\r\n\t\tthis.BASE_URL = \"http://localhost:5000/api/\";\r\n    \r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'X-Requested-With': 'Fetch'\r\n                }\r\n                })\r\n                .withInterceptor({\r\n                request(request) {\r\n\t\t\t\t\tvar autHeader = \r\n                    console.log('Requesting ${request.method}, ${request.url}');\r\n                    return request;\r\n                },\r\n                response(response) {\r\n                    console.log('Received ${response.status}, ${response.url}');\r\n                    return response;\r\n                }\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n    get(url) {\r\n\t\treturn this.httpClient.fetch(url)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n    }\r\n    \r\n    post(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n    }\r\n    \r\n    put(content, url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'put',\r\n\t\t\t\tbody: json(content)\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error;\r\n\t\t\t});\r\n    }\r\n    \r\n    delete(url) {\r\n\t\treturn this.httpClient\r\n\t\t\t.fetch(url, {\r\n\t\t\t\tmethod: 'delete'\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(object => {\r\n\t\t\t\treturn object;\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\treturn error ;\r\n\t\t\t});\r\n\t}\r\n\r\n\tuploadFiles(files, url){\r\n\t\t    return this.httpClient\r\n\t\t    .fetch(url, {\r\n\t\t        method: 'post',\r\n\t\t        body: files\r\n\t\t    })\r\n\t\t    .then(response => response.json())\r\n\t\t    .then(object => {\r\n\t\t        return object;\r\n\t\t    })\r\n\t\t    .catch(error => {\r\n\t\t        return error;\r\n\t\t    });\r\n\t}\r\n};\r\n\t\t\r\n","import { inject } from 'aurelia-framework';\r\nimport { DataServices } from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class ToDos {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n\r\n        this.TODO_SERVICE = 'todos';\r\n        this.todosArray = [];\r\n    }\r\n\r\n    async getUserTodo(id) {\r\n        let response = await this.data.get(this.TODO_SERVICE + \"/user/\" + id);\r\n        if (!response.error && !response.message) {\r\n            this.todosArray = response;\r\n        }\r\n    }\r\n    async deleteTodo(id){\r\n\t\tlet response = await this.data.delete(this.TODO_SERVICE + \"/\" + id);\r\n\t\tif(!response.error){\r\n\t\t\tfor(let i = 0; i < this.todosArray.length; i++){\r\n\t\t\t\tif(this.todosArray[i]._id === id){\r\n\t\t\t\t\tthis.todosArray.splice(i,1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n    async save(todo) {\r\n        if (todo) {\r\n            if (!todo._id) {\r\n                let serverResponse = await this.data.post(todo, this.TODO_SERVICE );\r\n                if (!serverResponse.error) {\r\n                    this.todosArray.push(serverResponse);\r\n                }\r\n                return serverResponse;\r\n              } else {\r\n                let response = await this.data.put(todo, this.TODO_SERVICE + \"/\" + todo._id );\r\n                if (!response.error) {\r\n                    // this.updateArray(response);\r\n                }\r\n                return response;\r\n            }\r\n        }\r\n    }\r\n    async uploadFile(files, userId, todoId){\r\n                let formData = new FormData();\r\n                files.forEach((item, index) => {\r\n            formData.append(\"file\" + index, item);\r\n          });\r\n            \r\n            let response = await this.data.uploadFiles(formData, this.TODO_SERVICE + \t\t\"/upload/\" + userId + \"/\" + todoId);\r\n            return response;\r\n        }\r\n        \r\n}","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n\r\n@inject(DataServices)\r\nexport class Users {\r\n\r\nconstructor(data) {\r\n        this.data = data;\r\n\r\n        this.USER_SERVICE = 'users';\r\n    }\r\n\r\nasync save(user){\r\n    if(user){\r\n        try{\r\n            let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n            return serverResponse;\r\n         } catch (error) {\r\n            console.log(error)\r\n            return error;\r\n        }\r\n    }\r\n}\r\n}","import { inject, bindable, bindingMode } from 'aurelia-framework';\r\nimport Flatpickr from 'flatpickr';\r\n@inject(Element)\r\nexport class FlatPickerCustomElement {\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) value;\r\n    constructor(element) {\r\n        this.element = element;\r\n    }\r\n\r\n    bind() {\r\n        const defaultConfig = {\r\n            altInput: true,\r\n            altFormat: \"F j, Y\",\r\n            wrap: true\r\n        };\r\n\r\n        this._config = Object.assign({}, defaultConfig);\r\n        this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\r\n    }\r\n    attached() {\r\n        this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\r\n    }\r\n    onChange(selectedDates, dateStr, instance) {\r\n        this.value = selectedDates[0]\r\n    }\r\n    valueChanged() {\r\n        if (!this.flatpickr) {\r\n            return;\r\n        }\r\n        if (this.value === this.flatpickr.selectedDates[0]) {\r\n            return;\r\n        }\r\n        let newDate = this.value ? this.value : undefined;\r\n        this.flatpickr.setDate(newDate);\r\n    }\r\n}","export class CompletedValueConverter {\r\n      \r\n       toView(array, value) {\r\n         if(!value){\r\n          return array.filter(item => {\r\n            return !item.completed;\r\n          })\r\n         } else {\r\n           return array;\r\n         }\r\n       }\r\n      }\r\n    ","import moment from 'moment';\r\nexport class DateFormatValueConverter {\r\n    toView(value) {\r\n        if (value === undefined || value === null) {\r\n            return;\r\n        }\r\n\r\n        return moment(value).format('MMM Do YYYY');\r\n    }\r\n}\r\n"],"sourceRoot":".."}