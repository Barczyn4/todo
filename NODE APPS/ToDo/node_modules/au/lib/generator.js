// Generated by CoffeeScript 1.3.3
var basename, encoding, exec, existsSync, fs, join, mote, wrench, _ref, _ref1;

fs = require('fs');

mote = require('mote');

wrench = require('wrench');

_ref = require('path'), basename = _ref.basename, join = _ref.join;

_ref1 = require('./utils'), encoding = _ref1.encoding, exec = _ref1.exec, existsSync = _ref1.existsSync;

module.exports = function(name, _arg) {
  var buffer, config, ctx, dest, file, key, src, template, val, _i, _len, _ref2, _ref3, _results;
  config = _arg.config, template = _arg.template;
  template = template || 'default';
  src = join(__dirname, '../templates', template);
  dest = name;
  ctx = {
    name: basename(dest),
    user: process.env.USER
  };
  if (config) {
    _ref2 = require(config);
    for (key in _ref2) {
      val = _ref2[key];
      ctx[key] = val;
    }
  }
  if (existsSync(dest)) {
    return console.log("" + dest + " already exists.");
  }
  wrench.copyDirSyncRecursive(src, dest);
  _ref3 = wrench.readdirSyncRecursive(dest);
  _results = [];
  for (_i = 0, _len = _ref3.length; _i < _len; _i++) {
    file = _ref3[_i];
    file = join(dest, file);
    if (fs.statSync(file).isFile() && !(/\.png$/.test(file))) {
      console.log(file);
      buffer = fs.readFileSync(file);
      template = mote.compile(buffer.toString());
      _results.push(fs.writeFileSync(file, template(ctx)));
    } else {
      _results.push(void 0);
    }
  }
  return _results;
};
